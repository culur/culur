name: üõ†Ô∏è Build and release

on: [push, pull_request]

jobs:
  #! ----- ----- ----- Build and test ----- ----- ----- !#
  build:
    name: Build and test
    runs-on: ubuntu-latest
    env:
      NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
    steps:
      #! Checkout
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history for validate commit
          fetch-depth: 0

      #! Install dependencies
      - name: üì• Install dependencies
        uses: ./.github/actions/install-dependencies

      #! Build
      - name: üõ†Ô∏è Build
        run: pnpm build

      #! Lint
      - name: üßπ Lint
        run: pnpm lint

      #! Test
      - name: üêõ Test
        run: pnpm test

      #! Validate commit
      - name: üí¨ Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: pnpm commitlint --from origin/main --to HEAD --verbose

      - name: üí¨ Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: pnpm commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

      #! Find coverage files
      - name: üîé Find coverage files
        id: coverage-files
        run: echo "files=$(find . -path ./.nx -prune , -type f -name coverage-final.json | paste -sd,)" >> $GITHUB_OUTPUT

      #! Upload Coverage
      - name: ‚¨ÜÔ∏è Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ${{ steps.coverage-files.outputs.files }}
          disable_search: true

  #! ----- ----- ----- Prepare release ----- ----- ----- !#
  release:
    name: Prepare release pull request
    needs: build
    if: "${{ github.ref == 'refs/heads/release' || (github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, 'chore: version packages')) }}"
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    env:
      NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
    steps:
      #! Checkout
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      #! Install dependencies
      - name: ‚¨áÔ∏è Install dependencies
        uses: ./.github/actions/install-dependencies

      #! Build
      - name: üõ†Ô∏è Build
        run: pnpm build

      #! Create release pull request or publish to npm
      - name: üöÄ Create release pull request or publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          title: 'chore: version packages'
          commit: 'chore: version packages'
          branch: main
          version: pnpm changeset:version
          publish: pnpm changeset:publish
        env:
          # Only release on main branch
          NPM_TOKEN: ${{ github.ref == 'refs/heads/main' && secrets.NPM_TOKEN || '' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
